/* tslint:disable */
/* eslint-disable */
/**
 * Dinero API
 * Welcome to our endpoint documentation. Please try to carefully read our general documentation found on <a href=\"https://developer.dinero.dk/\">developer.dinero.dk</a> for information regarding the authorization proces, status and errorcodes, FAQ, Postman tutorial etc. <br><br>Once authorized, you simply add \'Authorization: Bearer <access-token>\' to the header of your requests. On the page below, you\'ll find all our endpoints documented as well as possible, but if you have any questions regarding an endpoint, or an error in the description, please contact us on <a href=\"mailto:api@dinero.dk\">api@dinero.dk.</a> 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// URLSearchParams not necessarily used
// @ts-ignore
import { URL, URLSearchParams } from 'url';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { SmsSendModel } from '../model';
/**
 * SmsApi - axios parameter creator
 * @export
 */
export const SmsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Sends a specific invoice with a link in an SMS to the customer. An invoice must be booked, before it can be sent. SMS has special terms and usage will be invoiced. By using our API, you accept these <a href=\"https://dinero.dk/sikkerhed/retningslinjer-og-vilkaar-for-api-partnere/\" target=\"_blank\">terms and conditions</a>.
         * @summary Send sms with link to invoice
         * @param {string} voucherGuid 
         * @param {string} organizationId 
         * @param {SmsSendModel} [smsSendModel] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1OrganizationIdSmsVoucherGuidSendSmsPost: async (voucherGuid: string, organizationId: string, smsSendModel?: SmsSendModel, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'voucherGuid' is not null or undefined
            assertParamExists('v1OrganizationIdSmsVoucherGuidSendSmsPost', 'voucherGuid', voucherGuid)
            // verify required parameter 'organizationId' is not null or undefined
            assertParamExists('v1OrganizationIdSmsVoucherGuidSendSmsPost', 'organizationId', organizationId)
            const localVarPath = `/v1/{organizationId}/sms/{voucherGuid}/send-sms`
                .replace(`{${"voucherGuid"}}`, encodeURIComponent(String(voucherGuid)))
                .replace(`{${"organizationId"}}`, encodeURIComponent(String(organizationId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(smsSendModel, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * SmsApi - functional programming interface
 * @export
 */
export const SmsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = SmsApiAxiosParamCreator(configuration)
    return {
        /**
         * Sends a specific invoice with a link in an SMS to the customer. An invoice must be booked, before it can be sent. SMS has special terms and usage will be invoiced. By using our API, you accept these <a href=\"https://dinero.dk/sikkerhed/retningslinjer-og-vilkaar-for-api-partnere/\" target=\"_blank\">terms and conditions</a>.
         * @summary Send sms with link to invoice
         * @param {string} voucherGuid 
         * @param {string} organizationId 
         * @param {SmsSendModel} [smsSendModel] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async v1OrganizationIdSmsVoucherGuidSendSmsPost(voucherGuid: string, organizationId: string, smsSendModel?: SmsSendModel, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.v1OrganizationIdSmsVoucherGuidSendSmsPost(voucherGuid, organizationId, smsSendModel, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['SmsApi.v1OrganizationIdSmsVoucherGuidSendSmsPost']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * SmsApi - factory interface
 * @export
 */
export const SmsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = SmsApiFp(configuration)
    return {
        /**
         * Sends a specific invoice with a link in an SMS to the customer. An invoice must be booked, before it can be sent. SMS has special terms and usage will be invoiced. By using our API, you accept these <a href=\"https://dinero.dk/sikkerhed/retningslinjer-og-vilkaar-for-api-partnere/\" target=\"_blank\">terms and conditions</a>.
         * @summary Send sms with link to invoice
         * @param {SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPostRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        v1OrganizationIdSmsVoucherGuidSendSmsPost(requestParameters: SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.v1OrganizationIdSmsVoucherGuidSendSmsPost(requestParameters.voucherGuid, requestParameters.organizationId, requestParameters.smsSendModel, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for v1OrganizationIdSmsVoucherGuidSendSmsPost operation in SmsApi.
 * @export
 * @interface SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPostRequest
 */
export interface SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPostRequest {
    /**
     * 
     * @type {string}
     * @memberof SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPost
     */
    readonly voucherGuid: string

    /**
     * 
     * @type {string}
     * @memberof SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPost
     */
    readonly organizationId: string

    /**
     * 
     * @type {SmsSendModel}
     * @memberof SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPost
     */
    readonly smsSendModel?: SmsSendModel
}

/**
 * SmsApi - object-oriented interface
 * @export
 * @class SmsApi
 * @extends {BaseAPI}
 */
export class SmsApi extends BaseAPI {
    /**
     * Sends a specific invoice with a link in an SMS to the customer. An invoice must be booked, before it can be sent. SMS has special terms and usage will be invoiced. By using our API, you accept these <a href=\"https://dinero.dk/sikkerhed/retningslinjer-og-vilkaar-for-api-partnere/\" target=\"_blank\">terms and conditions</a>.
     * @summary Send sms with link to invoice
     * @param {SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SmsApi
     */
    public v1OrganizationIdSmsVoucherGuidSendSmsPost(requestParameters: SmsApiV1OrganizationIdSmsVoucherGuidSendSmsPostRequest, options?: RawAxiosRequestConfig) {
        return SmsApiFp(this.configuration).v1OrganizationIdSmsVoucherGuidSendSmsPost(requestParameters.voucherGuid, requestParameters.organizationId, requestParameters.smsSendModel, options).then((request) => request(this.axios, this.basePath));
    }
}


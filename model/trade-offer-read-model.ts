/* tslint:disable */
/* eslint-disable */
/**
 * Dinero API
 * Welcome to our endpoint documentation. Please try to carefully read our general documentation found on <a href=\"https://developer.dinero.dk/\">developer.dinero.dk</a> for information regarding the authorization proces, status and errorcodes, FAQ, Postman tutorial etc. <br><br>Once authorized, you simply add \'Authorization: Bearer <access-token>\' to the header of your requests. On the page below, you\'ll find all our endpoints documented as well as possible, but if you have any questions regarding an endpoint, or an error in the description, please contact us on <a href=\"mailto:api@dinero.dk\">api@dinero.dk.</a> 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { TotalLine } from './total-line';
// May contain unused imports in some cases
// @ts-ignore
import type { TradeOfferHistoryReadModel } from './trade-offer-history-read-model';
// May contain unused imports in some cases
// @ts-ignore
import type { TradeOfferLineReadModel } from './trade-offer-line-read-model';

/**
 * Represent a trade offer
 * @export
 * @interface TradeOfferReadModel
 */
export interface TradeOfferReadModel {
    /**
     * The currency used on the voucher. Defaults to DKK if null. Dinero will assign days date currency rate for the given currency. Currencies are given in format: DKK, EUR, USD etc...
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'currency'?: string | null;
    /**
     * The language to be used in the voucher. Available languages are \'da-DK\' and \'en-GB\'. Defaults to \'da-DK\'.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'language'?: string | null;
    /**
     * Your external id  This can be used for ID\'ing in external apps/services e.g. a web shop.  The maximum length is 128 characters
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'externalReference'?: string | null;
    /**
     * User supplied description of the voucher e.g. \'Custom Invoice description\'. Defaults to document type e.g. \'Invoice\', \'Offer\', \'Creditnote\' using the selected language.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'description'?: string | null;
    /**
     * User supplied comment on the voucher
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'comment'?: string | null;
    /**
     * The date of the creation/issuing. This should be in the format YYYY-MM-DD e.g. 2015-12-02. Defaults to today.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'date'?: string | null;
    /**
     * User supplied invoice lines. Minimum one.
     * @type {Array<TradeOfferLineReadModel>}
     * @memberof TradeOfferReadModel
     */
    'productLines': Array<TradeOfferLineReadModel>;
    /**
     * Contact address (linebreaks are allowed \'\\n\'). When null is specified the address defaults to the contacts address.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'address'?: string | null;
    /**
     * The number of the voucher.
     * @type {number}
     * @memberof TradeOfferReadModel
     */
    'number': number;
    /**
     * Contact name
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'contactName'?: string | null;
    /**
     * If true, the user prefers the invoice to be displayed with lines incl vat.
     * @type {boolean}
     * @memberof TradeOfferReadModel
     */
    'showLinesInclVat': boolean;
    /**
     * Total amount without vat
     * @type {number}
     * @memberof TradeOfferReadModel
     */
    'totalExclVat': number;
    /**
     * Total amount to calculate the vat from
     * @type {number}
     * @memberof TradeOfferReadModel
     */
    'totalVatableAmount': number;
    /**
     * Total amount incl. vat
     * @type {number}
     * @memberof TradeOfferReadModel
     */
    'totalInclVat': number;
    /**
     * Total vat free amount
     * @type {number}
     * @memberof TradeOfferReadModel
     */
    'totalNonVatableAmount': number;
    /**
     * Total vat amount
     * @type {number}
     * @memberof TradeOfferReadModel
     */
    'totalVat': number;
    /**
     * Total lines. SubTotal, Vat and Total. Only lines valid for display in the current context are returned.
     * @type {Array<TotalLine>}
     * @memberof TradeOfferReadModel
     */
    'totalLines'?: Array<TotalLine> | null;
    /**
     * Template id to use for design.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'invoiceTemplateId'?: string | null;
    /**
     * The guid of the voucher
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'guid': string;
    /**
     * Timestamp of version. To avoid concurrency issues.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'timeStamp'?: string | null;
    /**
     * Time of creation
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'createdAt'?: string | null;
    /**
     * Time of last update
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'updatedAt'?: string | null;
    /**
     * Time of deletion. Null unless the object is deleted.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'deletedAt'?: string | null;
    /**
     * OBSOLETE: Use Status instead. Equivalent of Status == Invoiced.  Is true if any vouchers has been generated based on this trade offer.
     * @type {boolean}
     * @memberof TradeOfferReadModel
     * @deprecated
     */
    'hasGeneratedAnyVouchers': boolean;
    /**
     * Dinero contact guid.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'contactGuid': string;
    /**
     * Status of the trade offer.  Possible values are Draft, Invoiced, CustomerAccepted, CustomerDeclined, UserAccepted, UserDeclined
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'status'?: string | null;
    /**
     * The mailout can have following status:  NotSent, Sent or SeenByCustomer, Failed.  SeenByCustomer, means the user has clicked on the link in the mailout and viewed the sales voucher.  Any type of mailout (email, reminder, pre-reminder, e-invoice), will change the status from NotSent to Sent.
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'mailOutStatus'?: string | null;
    /**
     * The mailout category can have following values:  Einvoice, ElectronicInvoiceReminder, Inkasso, Mailout, OrderConfirmation, PreReminder, Reminder, TradeOffer, None
     * @type {string}
     * @memberof TradeOfferReadModel
     */
    'latestMailOutType'?: string | null;
    /**
     * List of IDs of vouchers generated from the trade offer.
     * @type {Array<string>}
     * @memberof TradeOfferReadModel
     */
    'generatedVouchers'?: Array<string> | null;
    /**
     * List of trade offer changes.
     * @type {Array<TradeOfferHistoryReadModel>}
     * @memberof TradeOfferReadModel
     */
    'history'?: Array<TradeOfferHistoryReadModel> | null;
}

